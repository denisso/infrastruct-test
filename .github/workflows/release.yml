name: Release
run-name: ${{ github.actor }} started the Release
on:
  push:
    tags:
      - 'v\d+'
jobs:
  create-registry:
    name: Create Issue
    runs-on: ubuntu-latest
    outputs:
      issueid: ${{ steps.issue.outputs.number }}
      changelog: ${{ steps.changelog.outputs.clean_changelog }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout
        with:
          fetch-depth: 0
      - uses: TriPSs/conventional-changelog-action@v3
        name: Conventional Changelog Action
        id: changelog
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-git-pull: "true"
          output-file: "false"
          version: ${{ github.ref_name }}
          base: "main"
      - uses: JasonEtco/create-an-issue@v2.9.1
        name: Create an issue
        id: issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          changelog: ${{ steps.changelog.outputs.clean_changelog }}
          tag: ${{ github.ref_name }}
        with:
          assignees: "${{ github.actor }}"
          update_existing: true
          search_existing: all
          filename: .github/workflows/issue.md
      - uses: izhangzhihao/delete-comment@master
        name: Delete previous comments
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_user_name: github-actions[bot]
          issue_number: ${{ steps.issue.outputs.number }}
  release:
    name: Create Release Artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - uses: actions/cache@v3
        with:
          path: node_modules
          key: ccache
      - name: Install packages
        run: npm ci
      - name: Build
        run: npm run build
      - name: Archive Build Folder
        run: zip -r build.zip build
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Тестовое описание релиза
      - name: Upload Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build.zip
          asset_name: build.zip
          asset_content_type: application/zip
          
